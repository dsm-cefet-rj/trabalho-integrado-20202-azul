{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "GodFather API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:5000",
  "basePath": "/",
  "tags": [],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "scheme": "bearer",
      "in": "header"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Registra usuário",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SignUp"
            },
            "description": "Registrado com sucesso."
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/SignUpErro"
            },
            "description": "O usuário já está cadastrado."
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Loga usuário",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "type": "object",
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/LoginResposta"
            },
            "description": "Logado com sucesso."
          },
          "401": {
            "description": "Erro na autenticação."
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Desloga usuário",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "type": "object",
            "schema": {
              "$ref": "#/definitions/Logout"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deslogado com sucesso."
          }
        }
      }
    },
    "/api/character/": {
      "get": {
        "tags": [
          "Character"
        ],
        "description": "Busca personagem no mongodb",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Character"
            },
            "description": "Personagem encontrado."
          },
          "401": {
            "description": "Erro na autenticação."
          }
        }
      }
    },
    "/api/character/increment-status": {
      "post": {
        "tags": [
          "Character"
        ],
        "description": "Incrementa status do personagem",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "statusToIncrement": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IncrementStatus"
            },
            "description": "Status incrementado."
          }
        }
      }
    },
    "/api/missions/": {
      "get": {
        "tags": [
          "Missions"
        ],
        "description": "Busca missões no mongodb",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Missions"
            },
            "description": "Missões encontradas."
          },
          "401": {
            "description": "Erro na autenticação."
          }
        }
      }
    },
    "/api/gold/": {
      "get": {
        "tags": [
          "Gold"
        ],
        "description": "Busca ofertas da loja de gold no mongodb",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/GoldOffers"
            },
            "description": "Ofertas encontradas."
          }
        }
      }
    }
  },
  "definitions": {
    "Character": {
      "type": "object",
      "properties": {
        "character": {
          "type": "object",
          "properties": {
            "status": {
              "type": "object",
              "properties": {
                "pointsAvailable": {
                  "type": "number",
                  "example": 1000
                },
                "atk": {
                  "type": "number",
                  "example": 21
                },
                "res": {
                  "type": "number",
                  "example": 42
                },
                "lck": {
                  "type": "number",
                  "example": 999
                },
                "rsl": {
                  "type": "number",
                  "example": 23
                }
              }
            },
            "leveling": {
              "type": "object",
              "properties": {
                "xp": {
                  "type": "number",
                  "example": 7
                },
                "level": {
                  "type": "number",
                  "example": 1
                },
                "upXp": {
                  "type": "number",
                  "example": 10
                }
              }
            },
            "activeMission": {
              "type": "object",
              "properties": {
                "missionId": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number",
                      "example": 0
                    },
                    "name": {
                      "type": "string",
                      "example": "Fender Ketchup"
                    },
                    "description": {
                      "type": "string",
                      "example": "Follow the damn train CJ"
                    },
                    "sender": {
                      "type": "string",
                      "example": "Big Smoke"
                    },
                    "xp": {
                      "type": "number",
                      "example": 50
                    },
                    "time": {
                      "type": "number",
                      "example": 1
                    },
                    "__v": {
                      "type": "number",
                      "example": 0
                    }
                  }
                },
                "missionStartTime": {
                  "type": "number",
                  "example": 1620329842319
                }
              }
            },
            "_id": {
              "type": "number",
              "example": 0
            },
            "picture": {
              "type": "string",
              "example": "https://dd2t.github.io/psw/images/character/character-images/mafia-luffy.jpg"
            },
            "name": {
              "type": "string",
              "example": "Backend working"
            },
            "wins": {
              "type": "number",
              "example": 42
            },
            "losses": {
              "type": "number",
              "example": 23
            },
            "rankId": {
              "type": "number",
              "example": 0
            },
            "__v": {
              "type": "number",
              "example": 0
            }
          }
        }
      }
    },
    "GoldOffers": {
      "type": "object",
      "properties": {
        "offerArray": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "number",
                "example": 0
              },
              "picture": {
                "type": "string",
                "example": "https://dd2t.github.io/psw/images/gold-shop/description-images/1200g-300px.jpg"
              },
              "description": {
                "type": "string",
                "example": "Don's heritage"
              },
              "link": {
                "type": "string",
                "example": "www.google.com"
              },
              "value": {
                "type": "number",
                "example": 1200
              },
              "price": {
                "type": "number",
                "example": 200
              },
              "discount": {
                "type": "number",
                "example": 20
              },
              "__v": {
                "type": "number",
                "example": 0
              }
            }
          }
        }
      }
    },
    "Missions": {
      "type": "object",
      "properties": {
        "missionList": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "number",
                "example": 0
              },
              "name": {
                "type": "string",
                "example": "Fender Ketchup"
              },
              "description": {
                "type": "string",
                "example": "Follow the damn train CJ"
              },
              "sender": {
                "type": "string",
                "example": "Big Smoke"
              },
              "xp": {
                "type": "number",
                "example": 50
              },
              "time": {
                "type": "number",
                "example": 1
              },
              "__v": {
                "type": "number",
                "example": 0
              }
            }
          }
        }
      }
    },
    "SignUp": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "status": {
          "type": "string",
          "example": "Registration Successful!"
        }
      }
    },
    "SignUpErro": {
      "type": "object",
      "properties": {
        "err": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "example": "UserExistsError"
            },
            "message": {
              "type": "string",
              "example": "A user with the given username is already registered"
            }
          }
        }
      }
    },
    "Login": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "any"
        },
        "password": {
          "type": "string",
          "example": "any"
        }
      }
    },
    "LoginResposta": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "<Bearer Token>"
        },
        "username": {
          "type": "string",
          "example": "any"
        }
      }
    },
    "IncrementStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "object",
          "properties": {
            "pointsAvailable": {
              "type": "number",
              "example": 999
            },
            "atk": {
              "type": "number",
              "example": 22
            },
            "res": {
              "type": "number",
              "example": 42
            },
            "lck": {
              "type": "number",
              "example": 999
            },
            "rsl": {
              "type": "number",
              "example": 23
            }
          }
        }
      }
    },
    "Logout": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "<Bearer Token>"
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}